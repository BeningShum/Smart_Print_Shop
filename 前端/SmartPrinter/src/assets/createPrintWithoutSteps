<script>
  import axios from 'axios'

  export default {
    data() {
      return {
        username: '',
        dialogVisible: false,
        uploadedFiles: [],
        currentID: -1,
        date: '',
        time: '',
        totalPrice: 0,
        settingsForm:{
          paper: 'A4',
          color: '黑白',
          doubleSided: '0',
          copies: 1,
          startPage: 1,
          endPage: 1,
          note: '',
        },
        dataStorage: [],
      }
    },
    methods:{
      backHomepage() {
        this.$router.push({name: 'homepage_user', query: {username:this.username}});
      },
      getPrice(i) {
        let price = 0;
        let pages = this.dataStorage[i].endPage - this.dataStorage[i].startPage + 1
        let copies = this.dataStorage[i].copies;
        if (this.dataStorage[i].paper == 'A4'){
          if (this.dataStorage[i].color == '黑白'){
            if (this.dataStorage[i].doubleSided == '1'){
              price += 0.4;
            }
            else{
              price += 0.25;
            }
          }
          else{
            if (this.dataStorage[i].doubleSided == '1'){
              price += 2.2;
            }
            else{
              price += 1.2;
            }
          }
        }
        else{
          if (this.dataStorage[i].color == '黑白'){
            if (this.dataStorage[i].doubleSided == '1'){
              price += 0.8;
            }
            else{
              price += 0.5;
            }
          }
          else{
            if (this.dataStorage[i].doubleSided == '1'){
              price += 4.5;
            }
            else{
              price += 2.4;
            }
          }
        }          
        price *= pages;
        price *= copies;
        price = parseFloat(price.toFixed(2));
        return price;
      },
      submitUpload() {
        this.$refs.uploadRef.submit();
        if (this.uploadedFiles.length == 0){
          this.$message({
            message: '未选择要打印的文件！',
            type: 'error',
            showClose: true
          });
        }
        else {
          this.$message({
            message: '文件上传成功！',
            type: 'success',
            showClose: true
          });
        }
      },
      submitTask(){
        if (this.dataStorage.length === 0) {
          this.$message({
            message: '打印文件未上传/打印设置未完成！',
            type: 'error',
            showClose: true
          });
          return;
        }
        let url='/api/submitPrint/';
        let params={
          username: this.username,
          appointDate: this.date,
          appointTime: this.time,
          totalPrice: this.totalPrice,
          dataStorage: this.dataStorage
        }
        axios.post(url,params).then(r=>{  // 提交打印任务，后端返回任务ID
          if(r.data.status == 'ok'){
            this.$message({
              message: '打印任务已提交！',
              type: 'success',
              showClose: true
            });
            this.$router.push({name: 'taskDetails', query: {username:this.username, taskID: r.data.taskID, fromCreate: true}});
          }else {
            this.$message.error("提交失败");
          }
        }).catch(e=>{
          this.$message.error("提交失败");})
      },
      beforeUpload(file, fileList) {
        var dotIndex = file.name.lastIndexOf(".");
        const fileName = file.name.substring(0, dotIndex);
        let fileType = 'Unknown';
        const fileExtension = file.name.split('.').pop().toLowerCase();
        if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExtension)) {
          fileType = '图片';
        } else if (['doc', 'docx', 'pdf', 'txt'].includes(fileExtension)) {
          fileType = '文档';
        } else if (['xls', 'xlsx', 'csv'].includes(fileExtension)) {
          fileType = '电子表格';
        }
        let fileID = this.uploadedFiles.length;
        this.uploadedFiles.push({id: fileID, name: fileName, type: fileType, settings: '配置'});
        return true;
      },
      printSettings(id){
        this.currentID = id;
        const currentSettings = this.dataStorage[id] || {};
        this.settingsForm.paper = currentSettings.paper || 'A4';
        this.settingsForm.color = currentSettings.color || '黑白';
        this.settingsForm.doubleSided = currentSettings.doubleSided || '0';
        this.settingsForm.note = currentSettings.note || '';
        this.settingsForm.copies = currentSettings.copies || 1;
        this.settingsForm.startPage = currentSettings.startPage || 1;
        this.settingsForm.endPage = currentSettings.endPage || 1;
        this.dialogVisible = true;
      },
      saveSettings() {
        const linkId = this.currentID;
        this.dataStorage[linkId] = {
          fileName: this.uploadedFiles[linkId].name,
          paper: this.settingsForm.paper,
          color: this.settingsForm.color,
          doubleSided: this.settingsForm.doubleSided,
          copies: this.settingsForm.copies,
          startPage: this.settingsForm.startPage,
          endPage: this.settingsForm.endPage,
          price: 0,
          note: this.settingsForm.note
        };
        this.dataStorage[linkId].price = this.getPrice(linkId);
        this.totalPrice = 0;
        for (let i = 0; i < this.dataStorage.length; i++){
          this.totalPrice += this.getPrice(i);
        }
        this.totalPrice = this.totalPrice.toFixed(2);
        this.dialogVisible = false;
      }
    },
    mounted:function(){
      this.username = this.$route.query.username
    }
  }
</script>

<template>
  <div class="createPrint">
    <div class="container">
      <div class="_container">
        <el-button round type="danger" @click="backHomepage">
          <el-icon><ArrowLeftBold /></el-icon>返回</el-button>
      </div>
      <br>
      <el-upload
        ref="uploadRef"
        class="upload-demo"
        accept=".pdf, .png, .jpg, .jpeg, .doc, .docx, .csv, .xls, .xlsx"
        action="/api/upload/"
        multiple
        :auto-upload="false"
        :before-upload="beforeUpload" 
      >
        <template #tip>
          <div class="uploadTip">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持各类文档、图片及Excel电子表格打印，单个文件大小不超过50MB.
          </div>
        </template>
        <template #trigger>
          <el-button round type="success">
            <el-icon><Document /></el-icon>&nbsp;选择文件</el-button>
        </template>
      </el-upload>
      <div class="button_container">
        <el-button round type="success" @click="submitUpload">
          开始上传<el-icon class="el-icon--right"><Upload /></el-icon>
        </el-button>
      </div>
      <h3>预约送货上门时间：</h3>
      <el-date-picker
        v-model="date"
        type="date"
        placeholder="选择日期"
        size="small"
        value-format="YYYY-MM-DD"
        style="width: 150px;"
      />
      &nbsp;
      <el-time-select
        v-model="time"
        placeholder="上门时间"
        start="08:30"
        step="00:30"
        end="20:30"
        size="small"
        style="width: 120px;"
      />
      <h3>已上传文件：</h3>
      <div>
        <el-table :data="uploadedFiles" v-if="uploadedFiles.length > 0" stripe  :header-cell-style="{'text-align':'center'}">
          <el-table-column label="文件名" prop="name" align="center"></el-table-column>
          <el-table-column label="文件类型" prop="type" align="center"></el-table-column>
          <el-table-column label="打印设置" prop="settings" align="center">
            <template #default="scope">
                <el-link type="primary" @click="printSettings(scope.row.id)">{{ scope.row.settings }}</el-link>
            </template>
          </el-table-column>
        </el-table>
        <el-empty v-else description="无文件上传"/>
      </div>
      <h3>合计：{{ this.totalPrice }} 元</h3>
      <div class="button_container_center">
        <el-button type="danger" @click="submitTask">
          <el-icon><Promotion /></el-icon>&nbsp;提交打印</el-button>
      </div> 
    </div>
  </div>
  <el-dialog
    width="70%"
    draggable
    title="打印设置"
    v-model="dialogVisible"
  >
    <el-form :model="settingsForm" :rules="rules" label-width="80px">
      <el-form-item label="纸型">
        <el-radio-group v-model="settingsForm.paper">
          <el-radio label="A4">A4</el-radio>
          <el-radio label="A3">A3</el-radio>
        </el-radio-group>
      </el-form-item>
      <el-form-item label="颜色">
        <el-radio-group v-model="settingsForm.color">
          <el-radio-button label="黑白">黑白</el-radio-button>
          <el-radio-button label="彩色">彩色</el-radio-button>
        </el-radio-group>
      </el-form-item>
      <el-form-item label="单双面">
        单&nbsp;&nbsp;&nbsp;<el-switch v-model="settingsForm.doubleSided" active-value="1" inactive-value="0" active-color="#13ce66" inactive-color="#ff4949"></el-switch>&nbsp;&nbsp;&nbsp;双
      </el-form-item>
      <el-form-item label="打印范围">
        <el-input-number v-model="settingsForm.startPage" :min="1" :max="settingsForm.endPage" :step="1" style="width: 70px" controls-position="right" />~
        <el-input-number v-model="settingsForm.endPage" :min="settingsForm.startPage" :step="1" style="width: 70px" controls-position="right" />
      </el-form-item>
      <el-form-item label="份数">
        <el-input-number v-model="settingsForm.copies" :min="1" :max="100" :step="1" style="width: 100px;" />
      </el-form-item>
      <el-form-item label="备注">
        <el-input v-model="settingsForm.note" autocomplete="off" placeholder="其他打印信息"/>
      </el-form-item>
      <el-form-item>
        <el-button type="primary" @click="saveSettings" >确认</el-button>
      </el-form-item>
    </el-form>
  </el-dialog>
</template>

<style scoped>
.container {
    width: 300px;
    margin: 0 auto;
}

.button_container {
  display: flex;
  justify-content: flex-end;
}

.button_container_center {
  display: flex;
  justify-content: center;
}

.uploadTip{
  font-family: 'Times New Roman', 'SimHei';
  font-size: 14px;
  color: rgb(206, 12, 12);
  line-height: 1.5;
}
</style>